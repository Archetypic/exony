# Copyright 2015 Mykola Orliuk <virkony@gmail.com>
# Distributed under the terms of the GNU General Public License v2

require hackage

SUMMARY="Extra concurrency primitives"
DESCRIPTION="
The concurrent-extra package offers among other things the
following selection of synchronisation primitives:

* Broadcast: Wake multiple threads by broadcasting a value.

* Event: Wake multiple threads by signalling an event.

* Lock: Enforce exclusive access to a resource. Also known as a
binary semaphore or mutex. The package additionally provides an
alternative that works in the STM monad.

* RLock: A lock which can be acquired multiple times by the same
thread. Also known as a reentrant mutex.

* ReadWriteLock: Multiple-reader, single-writer locks. Used to
protect shared resources which may be concurrently read, but only
sequentially written.

* ReadWriteVar: Concurrent read, sequential write variables.

Please consult the API documentation of the individual modules for
more detailed information.

This package was inspired by the concurrency libraries of Java and
Python.
"
HOMEPAGE="https://github.com/basvandijk/concurrent-extra"

LICENCES="BSD-3"
PLATFORMS="~amd64"

DEPENDENCIES="
    $(haskell_lib_dependencies "
        dev-haskell/stm[>=2.1.2.1&<2.5]
        dev-haskell/unbounded-delays[>=0.1&<0.2]
    ")
    $(haskell_test_dependencies "
        dev-haskell/HUnit[>=1.2.2&<1.3]
        dev-haskell/async[>=2.0&<2.1]
        dev-haskell/random[>=1.0&<1.2]
        dev-haskell/stm[>=2.1.2.1&<2.5]
        dev-haskell/test-framework[>=0.2.4&<0.9]
        dev-haskell/test-framework-hunit[>=0.2.4&<0.4]
        dev-haskell/unbounded-delays[>=0.1&<0.2]
    ")
"

BUGS_TO="virkony@gmail.com"

